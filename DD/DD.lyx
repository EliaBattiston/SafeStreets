#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\date{}
\usepackage{multicol}
\usepackage{array}
\usepackage{chngcntr}
\counterwithin*{section}{part}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_author "Elia Battiston"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation 0mm
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 0 0 15 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\paragraph_spacing double
\align right
\begin_inset Graphics
	filename Images/PoliMi.svg
	lyxscale 20
	width 30text%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
let
\backslash
newpage
\backslash
relax
\end_layout

\end_inset


\end_layout

\begin_layout Title
\begin_inset Graphics
	filename Images/SafeStreetsLogo.svg
	lyxscale 20
	width 20text%

\end_inset


\begin_inset Newline newline
\end_inset

SafeStreets - DD
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
small Politecnico di Milano - A.Y.
 2019/20120}
\end_layout

\end_inset


\end_layout

\begin_layout Author
Andrea Aspesi - 
\begin_inset CommandInset href
LatexCommand href
name "andrea.aspesi@mail.polimi.it"
target "andrea.aspesi@mail.polimi.it"
type "mailto:"
literal "false"

\end_inset


\begin_inset Newline newline
\end_inset

Elia Battiston - 
\begin_inset CommandInset href
LatexCommand href
name "elia.battiston@mail.polimi.it"
target "elia.battiston@mail.polimi.it"
type "mailto:"
literal "false"

\end_inset


\begin_inset Newline newline
\end_inset

Alessandro Carabelli - 
\begin_inset CommandInset href
LatexCommand href
name "alessandro2.carabelli@mail.polimi.it"
target "alessandro2.carabelli@mail.polimi.it"
type "mailto:"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Introduction
\end_layout

\begin_layout Section
Purpose
\end_layout

\begin_layout Section
Scope
\end_layout

\begin_layout Section
Definitions, Acronyms, Abbreviations
\end_layout

\begin_layout Section
Revision history
\end_layout

\begin_layout Itemize

\emph on
Version 1.0:
\begin_inset Newline newline
\end_inset


\emph default
Initial release
\end_layout

\begin_layout Section
Reference documents
\end_layout

\begin_layout Itemize
Specification document: 
\begin_inset Quotes eld
\end_inset


\begin_inset CommandInset href
LatexCommand href
name "SafeStreets Mandatory Project Assignment"
target "https://beep.metid.polimi.it/documents/121843524/6b7a0cd3-49cd-4898-95ca-090e5eeac5df"
literal "false"

\end_inset


\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Section
Document structure
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Architectural design
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
The SafeStreets service is a distributed system of which the inner workings
 can be logically sliced in four layers.
 Each layer only interact with the 
\begin_inset Quotes eld
\end_inset

next
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

previous
\begin_inset Quotes erd
\end_inset

 layers, going from the components the user interacts with to the business
 logic.
\end_layout

\begin_layout Standard
This approach guarantees high modularity and inherent security at the same
 time, since a layer doesn't have a way to see anything beyond the layers
 it contacts directly.
\end_layout

\begin_layout Standard
The abovementioned layers, described in detail in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Component-view"
plural "false"
caps "false"
noprefix "false"

\end_inset

, are the following:
\end_layout

\begin_layout Itemize
Client components are the ones directly interacting with the platform's
 users, and which will be directly delivering all of its features
\end_layout

\begin_layout Itemize
REST API components provide an interface to the core of the system to be
 used by the clients, exposing only what is needed to every category of
 customer
\end_layout

\begin_layout Itemize
The Database layer represent the storage of every piece of data archived,
 generated or elaborated by the system
\end_layout

\begin_layout Itemize
The Business Logic components feed the database using external sources of
 relevant data or by computing statistics on data the system generated or
 acquired in the past
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Component-view"

\end_inset

Component view
\end_layout

\begin_layout Standard
The following diagrams show the components of the SafeStreets system.
 Each diagram shows a layer of interaction between logical levels, starting
 from the interfaces used by different kinds of users, the private REST
 APIs, the database and the logic used to populate it.
\end_layout

\begin_layout Subsection
Client components
\end_layout

\begin_layout Standard
The following are the components used by clients to access the services
 provided by SafeStreets.
\end_layout

\begin_layout Standard
They can be found in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Client-and-API"
plural "false"
caps "false"
noprefix "false"

\end_inset

, where their relationships with REST APIs is showed.
\end_layout

\begin_layout Itemize
The 
\emph on
Mobile application
\emph default
, the only available interface of the system for common users, lets them
 use the main features of SafeStreets:
\end_layout

\begin_deeper
\begin_layout Itemize
It is possible to register a new account or log in an existing one
\end_layout

\begin_layout Itemize
Users can send reports and view the ones sent by the currently logged in
 user
\end_layout

\begin_layout Itemize
Information about the safety of particular streets can be obtained
\end_layout

\end_deeper
\begin_layout Itemize
The 
\emph on
Web client
\emph default
 interface lets privileged users like Officers and Administrators carry
 out their respective jobs
\end_layout

\begin_deeper
\begin_layout Itemize
Authorized users can log in
\end_layout

\begin_layout Itemize
Authorized users can see and filter every report on the platform, sent by
 any user
\end_layout

\begin_layout Itemize
Administrators can obtain data on all user accounts, change their roles
 or administratively create new account for the municipality’s employees
\end_layout

\begin_layout Itemize
Officers can read the suggestions generated by the system
\end_layout

\end_deeper
\begin_layout Subsection
REST API components
\end_layout

\begin_layout Standard
These are the private APIs used to achieve communication between client
 interfaces and the service’s data, and represent the transactional operations
 of the system.
\end_layout

\begin_layout Standard
They can be found in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Client-and-API"
plural "false"
caps "false"
noprefix "false"

\end_inset

, where their relationships with REST APIs is showed, and in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:API-and-Database"
plural "false"
caps "false"
noprefix "false"

\end_inset

, where their relationships with database components is showed.
\end_layout

\begin_layout Itemize
The 
\emph on
Mobile application REST API
\emph default
 provides all characteristic operations of the mobile application
\end_layout

\begin_deeper
\begin_layout Itemize
The 
\emph on
Reports module 
\emph default
manages the upload of new reports and provides access to all previous reports
 by the same user
\end_layout

\begin_layout Itemize
The 
\emph on
Street safety
\emph default
 module gives detailed information of every street the user wishes to view
\end_layout

\end_deeper
\begin_layout Itemize
The 
\emph on
Accounts REST API
\emph default
 provides transactional operations on user accounts
\end_layout

\begin_deeper
\begin_layout Itemize
The 
\emph on
Registration module
\emph default
 manages all steps of the creation of new accounts
\end_layout

\begin_layout Itemize
The 
\emph on
Login module
\emph default
 is contacted when a user wants to authenticate in order to access SafeStreet's
 services
\end_layout

\begin_layout Itemize
The 
\emph on
AccountDetails module
\emph default
 provides methods to retrieve and change account details, in particular
 it lets administrator change an account's role
\end_layout

\end_deeper
\begin_layout Itemize
The 
\emph on
Web client REST API
\emph default
 provides access to features exclusively accessible by authorized users
\end_layout

\begin_deeper
\begin_layout Itemize
The 
\emph on
AccountsData 
\emph default
module is used to show a list of all users of the system.
 This component is part of the Web client API rather than the Accounts API
 to avoid exposing this method to an endpoint which is also accessible to
 common users, since returned data is highly sensitive (it includes fiscal
 codes and identification document pictures).
\end_layout

\begin_layout Itemize
The 
\emph on
Suggestions module
\emph default
 gives access the the suggestions generated by SafeStreets
\end_layout

\begin_layout Itemize
The 
\emph on
Reports module 
\emph default
lets administrators and authorities view the whole collection of reports
 in the database
\end_layout

\end_deeper
\begin_layout Subsection
Database components
\end_layout

\begin_layout Standard
The database components are logical sections of the system’s data storage
 system, which can be split in one or more database and possibly handled
 by the multiple DBMSs.
\end_layout

\begin_layout Standard
Each of them contains data relevant to different aspects of the system’s
 structure.
\end_layout

\begin_layout Standard
They can be found in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:API-and-Database"
plural "false"
caps "false"
noprefix "false"

\end_inset

, where their relationships with client components is showed, and in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Database-and-Logic"
plural "false"
caps "false"
noprefix "false"

\end_inset

, where their relationships with business logic components is showed.
\end_layout

\begin_layout Standard
Databases are passive components only, so they provide interface without
 depending on any other.
\end_layout

\begin_layout Itemize
The 
\emph on
Reports database 
\emph default
stores data from all the reports
\end_layout

\begin_layout Itemize
The 
\emph on
Safety&Suggestions 
\emph default
database stores the results of SafeStreet’s engine elaboration
\end_layout

\begin_layout Itemize
The 
\emph on
UserAccounts database
\emph default
 stores details of every user registered on the platform
\end_layout

\begin_layout Itemize
The 
\emph on
Accidents&Tickets 
\emph default
database stores data received form the municipality’s systems to be used
 for mining purposes.
 This database has no contact with the REST “layer”, since this information
 is highly confidential and can only be exposed in aggregated form in the
 results contained by the 
\emph on
Safety&Suggestions database
\end_layout

\begin_layout Subsection
Business logic components
\end_layout

\begin_layout Standard
The following components are the ones responsible for operations of the
 system which are not driven by user
\end_layout

\begin_layout Standard
interaction.
\end_layout

\begin_layout Standard
They can be found in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Database-and-Logic"
plural "false"
caps "false"
noprefix "false"

\end_inset

, where their relationships with database components is showed.
\end_layout

\begin_layout Itemize
The 
\emph on
Safety&Suggestions engine
\emph default
 is responsible for mining accidents, tickets and reports data to provide
 suggestions and safety ratings for different streets
\end_layout

\begin_layout Itemize
The 
\emph on
Municipality APIs adapter
\emph default
 manages access to the municipality’s APIs by periodically sending and receiving
 needed data
\end_layout

\begin_deeper
\begin_layout Itemize
The 
\emph on
Reports pusher
\emph default
 periodically sends reports generated after the latest push to the municipality’
s systems to create traffic tickets
\end_layout

\begin_layout Itemize
The 
\emph on
Accidents&Ticket puller
\emph default
 periodically retrieves traffic contravention data provided by the municipality,
 feeding the corresponding local database
\end_layout

\end_deeper
\begin_layout Subsection
Component diagrams
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Components/ClientSideComponents.pdf
	lyxscale 20
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Client-and-API"

\end_inset

Client and API components
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Components/ServerSideComponents.pdf
	lyxscale 20
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:API-and-Database"

\end_inset

API and Database components
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Components/LogicComponents.pdf
	lyxscale 20
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Database-and-Logic"

\end_inset

Database and Logic components
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
Deployment view
\end_layout

\begin_layout Section
Component interfaces
\end_layout

\begin_layout Section
Selected architectural styles and patterns
\end_layout

\begin_layout Section
Other design dcisions
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
User interface design
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Requirements traceability
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Implementation, integration and test plan
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Effort spent
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_body
\end_document
